ctr shift E 최근파일
커서에 ctr shift T => ctrl 클릭

스프링은 기본적으로 톰캣이 내장되어있다
스프링 웹 새 프로젝트 spring.io
Gradle/java/2.5.5/war/8
depdndencies: lomboc, spring web
=> generate

압축 내 개인폴더에서 풀고 파일명 변경해도 된다.(F2: 이름변경)

src.main.java..MvcApplication 들어가면 메인메서드 실행해보면 오류 클릭. description 확인시 Port 8080오류가 뜬다.
Port (컴퓨터 주소 개념IP같은..) 방 번호. 현재 8080번을 배정받았는데 이미 사용중인 번호여서 뜨는 오류. 웹서버 톰캣을 실행시켰는데 이게 8080이어서. 또 오라클이 현재 8080번이어서 중복이 뜨는거.   그래서 웹서버의 포트를 바꿔 볼 것이다.

main.resourse.application.properties에 들어가서
server.port = 8181 입력 후 다시 실행 하고 크롬에 http://localhost:8181/ 화이트라벨에러 뜨면 잘 된거다.
실행 중지 하면 사이트 연결 불가.

일반적으로 프로그램언어가 돌아간다면 다 WAS라고 부른다.(웹서버와 구분짓지 안음)

실습 중 로그창에 한글이 깨져서 나온다면 application.properties에서
shift 두 번 누르고 vm 검색 사용자지정검색? 들어가서
-Dfile.encoding=UTF-8 입력 후 인텔리제 껐다 다시 실행


서블릿은 꼭 클래스 위에 @WebServlet("/주소)랑 extends HttpServlet 입력해야함


========================================


## JSP 설정(HTML기반 자바 코드 사용가능)
src.main 에 새로 만들기- 경로 - webapp 입력(이름 꼭 저거로..)

build.gradle에 dependencies 쪽에 
//jsp 라이브러리 추가
   implementation 'javax.servlet:jstl'
   implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
입력 후 코끼리 새로고침.
help.md => README.md로 변경 gitignore에서 readme.md 삭제

https://mvnrepository.com/
(스프링 개발자는 스프링.io랑 메이븐은 필수 즐찾)
여기서 JSP 라이브러리 다운(사용 많은 수, 버전도 사용많은순)
메이븐파일 src.main.webapp 에 넣어야 해서 웹앱 폴더를 만들어야 한다. 하지만 인텔리제 툴에서 구조를 잡아주는거다.
gradle 검새갷서 가이드 보면 파일 구조 다 뜨긴 하지만 툴에서 어느정도 편하게 자동으로 해주는거다.

메이븐 넣을 jsp파일 만들고 vscode에서 만든다.. 우린 유료 얼티밋 버전을 못 쓰기 때문..
mvp_basic의 경우 "bye.jsp" 파일에 있음.
<%@ page contentType="text/html; charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
이걸 1번 줄에 넣어야 한다.

자바스크립트 + 자바 둘 다 가능

src.main.MvcApplication에서 실행 후 로컬호스트로 들어가면 서버 확인 가능.

main.resources.static에 html,css,등 이미지 등 소스 넣는곳



========================================



##진짜 스프링 실무 시작

파일 경로명을 숨기는 법 : webapp.WEB-INF(외부접근 차단 폴더) 만든다.
실무에서는 모든 jsp 파일을 넣어서 사용한다. 외부에서 경로 접근 차단용(내부접근은 가능. 우회해서 접근가능?)

** 앞으로 모든 폴더는 WEB-INF에 넣기
WEB-INF 하위폴더는 이름 변경해도 된다.

공식
//요청 URL: /basic    으로 접근했을 때 basic.jsp 가 열리도록 요청 메서드를 작성하시오
    @GetMapping("/basic")	//주소창에 뜨는 경로
    public String basic() {
        return "/WEB-INF/views/basic.jsp";		//실제 우리가 들어가는 경로
    }

GET: URL주소 전송(검색같은 경우 검색정보 링크를 전송시에 검색어가 들어있어야 링크에 맞게 전송된다.)
POST: 정보 (아이디, 비번 등) 숨겨서 전송


EL코드는 프라이빗 메서드여도 get메서드가 있으면 값을 불러올 수있다.
<p> 이름: ${name}></p>

JSTL
<c:forEach>: JSTL의 for문

<a href=""> 은 Get요청이다 POST안됨.
